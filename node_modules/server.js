// =================================================================
// get the packages we need ========================================
// =================================================================
 var express 	= require('express');
var app         = express();
var bodyParser  = require('body-parser');
var morgan      = require('morgan');
var mongoose    = require('mongoose');
const fileUpload = require('express-fileupload');
var jwt    = require('jsonwebtoken'); // used to create, sign, and verify tokens
var config = require('./app/config/config'); // get our config file
var User   = require('./app/models/user'); // get our mongoose model
var Product   = require('./app/models/product'); // get our mongoose model
var Order   = require('./app/models/Order'); // get our mongoose model
var Profile   = require('./app/models/Profile'); // get our mongoose model
var Job   = require('./app/models/Job'); // get our mongoose model
var JobApp   = require('./app/models/JobApplication'); // get our mongoose model
var routers=require('./app/routes/myroutes')(app,jwt,User,Product,Order,Profile,Job,JobApp,fileUpload);
var noAuthRouters=require('./app/routes/noAuthRoutes')(app,User);
var path = require('path');

mongoose.set('debug', true);
// =================================================================
// configuration ===================================================
// =================================================================
var port = process.env.PORT || 8080; // used to create, sign, and verify tokens
mongoose.connect(config.database); // connect to database
app.set('superSecret', config.secret); // secret variable

// use body parser so we can get info from POST and/or URL parameters
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());

// use morgan to log requests to the console
app.use(morgan('dev'));


// =================================================================
// routes ==========================================================
// =================================================================
app.get('/setup', function(req, res) {

  console.log('getting request' +  req.query.name);



	// create a sample user
	var user = new User({ 
		name: req.query.name,
    email: req.query.email, 
		password: req.query.password,
		admin: false,
    type :  req.query.type
	});
	user.save(function(err) {
		if (err){
  	res.json({ success: false, error : "Email is already registered." });
        if(err.code=="11000"){
          	res.json({ success: false, error : "Email is already registered." });
        }else {
            res.json({ success: false, error : "Error while registering. Please try again." });
        }
    }else {
      	 res.json({ success: true, error : "Error while registering. Please try again." });
    }
	});
});

// basic route (http://localhost:8080)
app.get('/', function(req, res) {
	//res.send('Hello! The API is at http://localhost:' + port + '/api');
  res.sendFile(path.join(__dirname + '/web/login.htm'));
});

app.get('/comp_dash', function(req, res) {
	//res.send('Hello! The API is at http://localhost:' + port + '/api');
  res.sendFile(path.join(__dirname + '/web/comp_dash.htm'));
});

app.get('/agency_dash', function(req, res) {
	//res.send('Hello! The API is at http://localhost:' + port + '/api');
  res.sendFile(path.join(__dirname + '/web/agency_dash.htm'));
});


app.use(express.static(path.join(__dirname, 'public')));
// // ---------------------------------------------------------
// // get an instance of the router for api routes
// // ---------------------------------------------------------
// var apiRoutes = express.Router(); 

// // ---------------------------------------------------------
// // authentication (no middleware necessary since this isnt authenticated)
// // ---------------------------------------------------------
// // http://localhost:8080/api/authenticate
// apiRoutes.post('/authenticate', function(req, res) {

// 	// find the user
// 	User.findOne({
// 		name: req.body.name
// 	}, function(err, user) {

// 		if (err) throw err;

// 		if (!user) {
// 			res.json({ success: false, message: 'Authentication failed. User not found.' });
// 		} else if (user) {

// 			// check if password matches
// 			if (user.password != req.body.password) {
// 				res.json({ success: false, message: 'Authentication failed. Wrong password.' });
// 			} else {

// 				// if user is found and password is right
// 				// create a token
// 				var token = jwt.sign(user, app.get('superSecret'), {
// 					expiresIn: 86400 // expires in 24 hours
// 				});

// 				res.json({
// 					success: true,
// 					message: 'Enjoy your token!',
// 					token: token
// 				});
// 			}		

// 		}

// 	});
// });

// // ---------------------------------------------------------
// // route middleware to authenticate and check token
// // ---------------------------------------------------------
// apiRoutes.use(function(req, res, next) {

//       console.log('in Router');

// 	// check header or url parameters or post parameters for token
// 	var token = req.body.token || req.param('token') || req.headers['x-access-token'];


//      console.log('in Router'+ token);

// 	// decode token
// 	if (token) {

// 		// verifies secret and checks exp
// 		jwt.verify(token, app.get('superSecret'), function(err, decoded) {			
// 			if (err) {
// 				return res.json({ success: false, message: 'Failed to authenticate token.' });		
// 			} else {
// 				// if everything is good, save to request for use in other routes
// 				req.decoded = decoded;	
// 				next();
// 			}
// 		});

// 	} else {

// 		// if there is no token
// 		// return an error
// 		return res.status(403).send({ 
// 			success: false, 
// 			message: 'No token provided.'
// 		});
		
// 	}
	
// });

// // ---------------------------------------------------------
// // authenticated routes
// // ---------------------------------------------------------


// apiRoutes.get('/users', function(req, res) {
// 	User.find({}, function(err, users) {
// 		res.json(users);
// 	});
// });

// apiRoutes.get('/check', function(req, res) {
// 	res.json(req.decoded);
// });
app.use(fileUpload());

app.post('/upload', function(req, res) {
  "use strict";
console.log('in upload');

	if (!req.files)
    	return res.status(400).send('No files were uploaded.');

		let sampleFile = req.files.sampleFile;
 
  // Use the mv() method to place the file somewhere on your server 
  sampleFile.mv('resume.jpg', function(err) {
    if (err)
      return res.status(500).send(err);
 
    res.send('File uploaded!');
 });
});

app.use('/api', routers);
app.use('/noauth',noAuthRouters);

process.on('uncaughtException', function (err) {
  console.log(err);
})
//testing
// =================================================================
// start the server ================================================
// =================================================================
app.listen(port);
console.log('Magic happens at http://localhost:' + port);

